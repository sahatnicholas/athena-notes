plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.gorylenko.gradle-git-properties' version '2.2.3'
	id 'org.owasp.dependencycheck' version '5.3.2.1'
	id 'com.github.spotbugs' version '4.4.5'
	id 'de.aaschmid.cpd' version '3.1'
	id 'pmd'
	id 'jacoco'
	id 'checkstyle'
}

group = ''
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

checkstyle {
	configFile = file("gradle/sca/checkstyle/checkstyle.xml")
}

cpdCheck {
	ignoreFailures = true
	source = sourceSets.main.allJava
}

jacoco {
	toolVersion = "0.8.3"
}

jacocoTestReport {
	reports {
		html.enabled = true
	}

	afterEvaluate {
		getClassDirectories().setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
				exclude: [])
		}))
	}
}

pmd {
	ignoreFailures = true
	ruleSets = []
	ruleSetFiles(file("gradle/sca/pmd/pmd.xml"))
}

spotbugs {
	ignoreFailures = true
	excludeFilter = file("gradle/sca/spotbugs/excludeFilter.xml")
}

checkstyleTest.enabled = false
pmdTest.enabled = false
spotbugsTest.enabled = false

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Authentication
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// Database
	implementation 'com.vladmihalcea:hibernate-types-52:2.9.13'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core:6.5.3'
	runtimeOnly 'org.postgresql:postgresql'

	// Validation
	implementation 'org.hibernate:hibernate-validator:6.1.5.Final'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'

	// SuppressFbWarning
	compileOnly 'com.google.code.findbugs:annotations:3.0.1'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// For easier mapping between POJOs
	implementation 'org.mapstruct:mapstruct-jdk8:1.3.1.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

	// Test
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'junit:junit:4.13'
	testImplementation 'org.mockito:mockito-core:3.4.6'
	testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
	testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
	testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.7'
	testImplementation 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:7.1.0'
	
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.RELEASE'
	}
}

test {
	useJUnitPlatform()
}

bootRun {
	environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "development"
}
